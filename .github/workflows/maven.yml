# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml
      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      - name : upload file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "target/ssacthree_gateway-0.0.1-SNAPSHOT.jar"
          target: "~/"
          rm: false
      - name: execute shell script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            fuser -k 8081/tcp || echo "No process on 8081"
            chmod +x ./gateway_startup.sh
            ./gateway_startup.sh
     # Prometheus 설치 및 설정
      - name: Install and Configure Prometheus
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            if [ ! -d "/opt/prometheus" ]; then
              echo "Installing Prometheus"
              wget https://github.com/prometheus/prometheus/releases/download/v2.48.0/prometheus-2.48.0.linux-amd64.tar.gz
              tar -xvf prometheus-2.48.0.linux-amd64.tar.gz
              mv prometheus-2.48.0.linux-amd64 /opt/prometheus
            fi

            # Prometheus 설정 파일 생성/업데이트
            cat <<EOT > /opt/prometheus/prometheus.yml
            global:
              scrape_interval: 15s

            scrape_configs:
              - job_name: 'gateway-service'
                basic_auth:
                  username:'minji'
                  password:'1234'
                static_configs:
                  - targets: ['133.186.210.215:8080'] # 게이트웨이 메트릭 엔드포인트
            EOT

            # Prometheus 실행
            pkill prometheus || echo "Prometheus not running"
            nohup /opt/prometheus/prometheus --config.file=/opt/prometheus/prometheus.yml > /opt/prometheus/prometheus.log 2>&1 &
            
      - name: Run SonarQube
        run: mvn sonar:sonar -Dsonar.projectKey=ssacthree-gateway -Dsonar.projectName="ssacthree-gateway" -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.token=${{secrets.SONAR_TOKEN}}
